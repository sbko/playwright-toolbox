name: Build New Playwright Version

on:
  schedule:
    # Run weekly on Mondays at 10 AM UTC
    - cron: '0 10 * * 1'
  workflow_dispatch:
    inputs:
      version:
        description: 'Playwright version to build (leave empty for latest)'
        required: false
        type: string

jobs:
  build-version:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    
    - name: Determine target version
      id: version
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          TARGET_VERSION="${{ github.event.inputs.version }}"
        else
          TARGET_VERSION=$(npm view @playwright/test version)
        fi
        echo "target=$TARGET_VERSION" >> $GITHUB_OUTPUT
        echo "Target version: $TARGET_VERSION"
    
    - name: Check if image exists
      id: image-check
      run: |
        # Check if image with this version already exists
        IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
          "https://ghcr.io/v2/${{ github.repository }}/manifests/${{ steps.version.outputs.target }}")
        
        if [ "$IMAGE_EXISTS" = "200" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Image for version ${{ steps.version.outputs.target }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Image for version ${{ steps.version.outputs.target }} does not exist - build needed"
        fi
    
    - name: Trigger Docker build
      if: steps.image-check.outputs.exists == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'docker-build.yml',
            ref: 'main'
          });
          
          console.log('Triggered Docker build for Playwright version ${{ steps.version.outputs.target }}');